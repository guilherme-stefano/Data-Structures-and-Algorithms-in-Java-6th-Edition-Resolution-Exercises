package C229;

import java.util.LinkedList;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class PolynomialTermRegex {
	
	private String Term;
	
	public PolynomialTermRegex(String term) {
		this.Term = term;
	}
	
	public boolean hasNumberInBeginTerm() {
	   char charArray[] = this.Term.toCharArray();
	   boolean hasNumber = Character.isDigit(charArray[0]);
	   hasNumber = hasNumber && Character.isDigit(charArray[1]);   
	   return hasNumber; 
	}
	
	public LinkedList<String> hasSignal() {
		LinkedList<String> resultList =  new LinkedList<String>();
		Pattern pattern = Pattern.compile("([+-]?)", Pattern.CASE_INSENSITIVE);
	    Matcher matcher = pattern.matcher(this.PolynomialString);
	    
	    while (matcher.find()) {
	    	String match = matcher.group();
	    	resultList.add(match);
	    }
	    
	    return resultList;
	}

}
